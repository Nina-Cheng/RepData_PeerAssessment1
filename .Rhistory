data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE ,sep=",")
unlink("acitivity.zip")
obs<- nrow(data)
wk<-character(obs)
for (i in 1:obs){
if(weekdays(as.Date(date[i]))=="Sunday")
wk[i]="weekend"
else if (weekdays(as.Date(date[i]))=="Saturday")
wk[i]="weekend"
else
wk[i]="weekday"
}
newdata<-data.frame(newdata,wk)
wk<-as.factor(wk)
weekend<-newdata[newdata$wk=="weekend",]
weekday<-newdata[newdata$wk=="weekday",]
weekendim<-tapply(weekend$newsteps,weekend$interval,mean)
weekdayim<-tapply(weekday$newsteps,weekday$interval,mean)
group<-as.factor(rep(c("weekend","weekday"),each=288))
wkmeans<-data.frame(rbind(weekendim,weekdayim))
weekdata<-data.frame(cbind(wkmeans,group))
obs<- nrow(data)
newsteps<-numeric(obs)
for (i in 1:obs){
if(is.na(data$steps[i]))
newsteps[i]=as.numeric(intervalmean[as.numeric(names(intervalmean))==data$interval[i]])
else
newsteps[i]=data$steps[i]
}
date<-data$date
interval<-data$interval
newdata<-data.frame(newsteps,date,interval)
intervalmean<-tapply(data$steps,data$interval,mean,na.rm=TRUE)
intervals<-as.numeric(names(intervalmean))
plot(intervals,intervalmean,type="l",xlab="5-minute interval",ylab="average number of steps taken")
maxinterval<- names(intervalmean)[intervalmean ==max(intervalmean)]
obs<- nrow(data)
newsteps<-numeric(obs)
for (i in 1:obs){
if(is.na(data$steps[i]))
newsteps[i]=as.numeric(intervalmean[as.numeric(names(intervalmean))==data$interval[i]])
else
newsteps[i]=data$steps[i]
}
date<-data$date
interval<-data$interval
newdata<-data.frame(newsteps,date,interval)
obs<- nrow(data)
wk<-character(obs)
for (i in 1:obs){
if(weekdays(as.Date(date[i]))=="Sunday")
wk[i]="weekend"
else if (weekdays(as.Date(date[i]))=="Saturday")
wk[i]="weekend"
else
wk[i]="weekday"
}
newdata<-data.frame(newdata,wk)
wk<-as.factor(wk)
weekend<-newdata[newdata$wk=="weekend",]
weekday<-newdata[newdata$wk=="weekday",]
weekendim<-tapply(weekend$newsteps,weekend$interval,mean)
weekdayim<-tapply(weekday$newsteps,weekday$interval,mean)
group<-as.factor(rep(c("weekend","weekday"),each=288))
head(weekdayim)
wkmeans<-data.frame(rbind(weekendim,weekdayim))
head(wkmeans)
wkmeans<-data.frame(weekendim,weekdayim)
head(wkmeans)
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi),cbind(weekdayim,weekdayi))
)
weekendi<-as.numeric(names(weekendim))
weekdayi<-as.numeric(names(weekdayim))
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi),cbind(weekdayim,weekdayi)))
head(wkmeans)
gweekend<-as.factor(rep("weekend",times=288)
gweekday<-as.factor(rep("weekday",times=288)
gweekend<-as.factor(rep("weekend",times=288)
)
gweekday<-as.factor(rep("weekday",times=288))
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi,gweekend),cbind(weekdayim,weekdayi,gweekday))
)
head(wkmeans)
names(wkmeans)<-c("Mean","interval","wk")
head(wkmeans)
wkmeans<-data.frame(rbind(data.frame(weekendim,weekendi,gweekend),data.frame(weekdayim,weekdayi,gweekday)))
head(wkmeans)
group<-as.factor(c(rep("weekend","weekday"),each=288))
group
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi),cbind(weekdayim,weekdayi,gweekday))),group)
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi),cbind(weekdayim,weekdayi)),group)
head(wkmeans)
wkmeans<-data.frame(rbind(cbind(weekendim,weekendi),cbind(weekdayim,weekdayi,gweekday))),group)
group<-as.factor(c(rep("weekend","weekday"),each=288))
rep("weekend","weekday"),each=288)
weekendim<-as.numeric(tapply(weekend$newsteps,weekend$interval,mean))
head(weekendim)
wkmeans<-data.frame(rbind(cbind(as.numeric(weekendim),weekendi),cbind(as.numeric(weekdayim),weekdayi)),group)
names(wkmeans)<-c("Mean","interval","group")
library(lattice)
xyplot(wkmeans$Means ~ wkmeans$interval | group, data = wkmeans, layout= c(1,2),type="l")
str(wkmeans)
library(lattice)
xyplot(Means ~ interval | group, data = wkmeans, layout= c(1,2),type="l")
library(lattice)
xyplot(wkmeans$Means ~ wkmeans$interval | wkmeans$group, data = wkmeans, layout= c(1,2),type="l")
library(lattice)
xyplot(wkmeans$Mean ~ wkmeans$interval | wkmeans$group, data = wkmeans, layout= c(1,2),type="l")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
?geom
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
?geom
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom
?trellis.par.set
